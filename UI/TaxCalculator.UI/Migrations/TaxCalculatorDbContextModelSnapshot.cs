// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalculator.Repository;

namespace TaxCalculator.UI.Migrations
{
    [DbContext(typeof(TaxCalculatorDbContext))]
    partial class TaxCalculatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxCalculator.DataContracts.IncomeTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("IncomeTaxType")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("IncomeTaxType")
                        .HasName("AlternateKey_IncomeTaxType");

                    b.ToTable("IncomeTaxes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Flat Rate",
                            IncomeTaxType = "FlatTaxRate"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Flat Value",
                            IncomeTaxType = "FlatValue"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Progressive",
                            IncomeTaxType = "Progressive"
                        });
                });

            modelBuilder.Entity("TaxCalculator.DataContracts.PostalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IncomeTaxId");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.HasAlternateKey("PostCode")
                        .HasName("AlternateKey_PostCode");

                    b.HasIndex("IncomeTaxId");

                    b.ToTable("PostalCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IncomeTaxId = 3,
                            PostCode = "7441"
                        },
                        new
                        {
                            Id = 2,
                            IncomeTaxId = 2,
                            PostCode = "A100"
                        },
                        new
                        {
                            Id = 3,
                            IncomeTaxId = 1,
                            PostCode = "7000"
                        },
                        new
                        {
                            Id = 4,
                            IncomeTaxId = 3,
                            PostCode = "1000"
                        });
                });

            modelBuilder.Entity("TaxCalculator.DataContracts.TaxBracket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BaseTax")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Description");

                    b.Property<decimal?>("EndIncome")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("IncomeTaxId");

                    b.Property<decimal>("StartIncome")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(4, 3)");

                    b.HasKey("Id");

                    b.HasIndex("IncomeTaxId");

                    b.ToTable("TaxBrackets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseTax = 0m,
                            Description = "Flat Tax Rate",
                            IncomeTaxId = 1,
                            StartIncome = 0m,
                            TaxRate = 0.175m
                        },
                        new
                        {
                            Id = 2,
                            BaseTax = 10000m,
                            Description = "Flat Value Tax",
                            EndIncome = 200000m,
                            IncomeTaxId = 2,
                            StartIncome = 0m,
                            TaxRate = 0.05m
                        },
                        new
                        {
                            Id = 3,
                            BaseTax = 0m,
                            Description = "Progressive Tax Bracket 1",
                            EndIncome = 8350m,
                            IncomeTaxId = 3,
                            StartIncome = 0m,
                            TaxRate = 0.1m
                        },
                        new
                        {
                            Id = 4,
                            BaseTax = 0m,
                            Description = "Progressive Tax Bracket 2",
                            EndIncome = 33950m,
                            IncomeTaxId = 3,
                            StartIncome = 8351m,
                            TaxRate = 0.15m
                        },
                        new
                        {
                            Id = 5,
                            BaseTax = 0m,
                            Description = "Progressive Tax Bracket 3",
                            EndIncome = 82250m,
                            IncomeTaxId = 3,
                            StartIncome = 33951m,
                            TaxRate = 0.25m
                        },
                        new
                        {
                            Id = 6,
                            BaseTax = 0m,
                            Description = "Progressive Tax Bracket 4",
                            EndIncome = 171550m,
                            IncomeTaxId = 3,
                            StartIncome = 82251m,
                            TaxRate = 0.28m
                        },
                        new
                        {
                            Id = 7,
                            BaseTax = 0m,
                            Description = "Progressive Tax Bracket 5",
                            EndIncome = 372950m,
                            IncomeTaxId = 3,
                            StartIncome = 171551m,
                            TaxRate = 0.33m
                        },
                        new
                        {
                            Id = 8,
                            BaseTax = 0m,
                            Description = "Progressive Tax Bracket 6",
                            IncomeTaxId = 3,
                            StartIncome = 372951m,
                            TaxRate = 0.35m
                        });
                });

            modelBuilder.Entity("TaxCalculator.DataContracts.TaxQueryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateQueried");

                    b.Property<string>("PostCode");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TaxableIncome")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("TaxQueryLogs");
                });

            modelBuilder.Entity("TaxCalculator.DataContracts.PostalCode", b =>
                {
                    b.HasOne("TaxCalculator.DataContracts.IncomeTax", "IncomeTax")
                        .WithMany()
                        .HasForeignKey("IncomeTaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaxCalculator.DataContracts.TaxBracket", b =>
                {
                    b.HasOne("TaxCalculator.DataContracts.IncomeTax", "IncomeTax")
                        .WithMany("TaxBrackets")
                        .HasForeignKey("IncomeTaxId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
